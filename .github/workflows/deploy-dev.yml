name: CI Pipeline

on:
  push:
    branches:
      - dev

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      # Checkout the code
      - name: Checkout Backend Repo
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies and build
      - name: Install dependencies and build
        run: |
          yarn install

      # - name: Debug Environment
      #   run: |
      #     echo "AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}"
      #     echo "AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}"

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/OIDC_role
          aws-region: ap-southeast-2
          audience: sts.amazonaws.com

      # Verify AWS Credentials
      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      # - name: Run tests
      #   run: |
      #     yarn test

      # Set Up Terraform
      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # Terraform Init
      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      # Terraform Plan (optional but recommended)
      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform/

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}

      # Save Backend API URL
      - name: Save Backend API URL
        run: echo "BACKEND_API_URL=$(terraform output -raw backend_api_url)" >> $GITHUB_ENV
        working-directory: terraform/
